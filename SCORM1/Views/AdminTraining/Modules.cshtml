@using SCORM1.Models.ViewModel;
@using SCORM1.Models.Lms;
@model AdminTrainingModuleViewModel
@Html.Partial("_LoginSuperAdmin")
<br />
<br />
<br />
<br />
<br />
<br />
<div class="row fecha">
    <div class="btn-group btn-breadcrumb">
        <a href="@Url.Action("Index", "Home")" class="btn btn-info"><i class="glyphicon glyphicon-home"></i></a>
    </div>
</div>
<br />
<div class="jumbotron col-md-12">
    @if (TempData["add"] != null)
    {
        <div class="alert alert-danger fade in">
            <a href="#" class="close" data-dismiss="alert">&times;</a>
            @TempData["add"]
        </div>
    }
    @Scripts.Render("~/bundles/jqueryval")
    @if (TempData["UpdateModulo"] != null)
    {
        @section Scripts {
            <script type="text/JavaScript">
                $(document).ready(function () {
                    $("#FormUpdateModule").modal();
                });
            </script>
        }}
    else
    {
        if (TempData["Info"] != null)
        {
            @section Scripts {
                <script type="text/JavaScript">
                    $(document).ready(function () {
                        $("#Inform").modal();
                    });
                </script>
            }}

    }
    <div id="FormUpdateModule" class="modal fade" role="dialog">
        <div class="modal-dialog1">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"><strong>MODIFICAR CURSO</strong></h4>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("UpdateModule", "AdminTraining", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <br />
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model.Modu_Id)
                                @Html.LabelFor(model => model.Modu_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.EditorFor(model => model.Modu_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre del Tema" } })
                                @Html.ValidationMessageFor(model => model.Modu_Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Modu_Points, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.Modu_Points, new { htmlAttributes = new { @class = "form-control", @placeholder = "Intentos Permitidos", @style = "width:70%" } })
                                @Html.ValidationMessageFor(model => model.Modu_Points, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Modu_Description, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.TextAreaFor(model => model.Modu_Description, 7, 0, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Modu_Description, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Modu_Statemodule, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EnumDropDownListFor(model => model.Modu_Statemodule, new { @class = "form-control", @style = "width:70%" })
                                @Html.ValidationMessageFor(model => model.Modu_Statemodule, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Modu_Validity, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.Modu_Validity, new { htmlAttributes = new { @class = "form-control", @style = "width:70%" } })
                                @Html.ValidationMessageFor(model => model.Modu_Validity, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Modu_Period, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EnumDropDownListFor(model => model.Modu_Period, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Modu_Period, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Modu_TypeOfModule, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EnumDropDownListFor(model => model.Modu_TypeOfModule, new { @class = "form-control", @style = "width:70%" })
                                @Html.ValidationMessageFor(model => model.Modu_TypeOfModule, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Modu_Improvement, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.EnumDropDownListFor(model => model.Modu_Improvement, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Modu_Improvement, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Modu_BetterPractice, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EnumDropDownListFor(model => model.Modu_BetterPractice, new { @class = "form-control", @style = "width:70%" })
                                @Html.ValidationMessageFor(model => model.Modu_BetterPractice, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.QSMActive, htmlAttributes: new { @class = "control-label col-md-6" })
                                @Html.EnumDropDownListFor(model => model.QSMActive, new { @class = "form-control col-md-6", @style = "width:70%" })
                                @Html.ValidationMessageFor(model => model.QSMActive, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Modu_Test, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.EnumDropDownListFor(model => model.Modu_Test, new { @class = "form-control", @style = "width:70%" })
                                @Html.ValidationMessageFor(model => model.Modu_Test, "", new { @class = "text-danger" })
                                <br />
                            </div>
                            <div class="col-md-6">
                                @Html.Label("Portada", htmlAttributes: new { @class = "control-label col-md-4" })
                                <input type="file" id="CoverpageModule" name="upload" />
                            </div>
                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-8">
                                    <br /><br />
                                    <center><button class="btn btn-primary" name="singin" type="submit">Modificar Curso</button></center>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog1">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2 class="modal-title"><strong>NUEVO CURSO</strong></h2>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("AddModule", "AdminTraining", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                    <div class="row">
                        <br />
                        <div class="col-md-6">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.Modu_Id)
                            @Html.LabelFor(model => model.Modu_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.EditorFor(model => model.Modu_Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombre del Tema" } })
                            @Html.ValidationMessageFor(model => model.Modu_Name, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => model.Modu_Points, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.EditorFor(model => model.Modu_Points, new { htmlAttributes = new { @class = "form-control", @placeholder = "Intentos Permitidos", @style = "width:70%" } })
                            @Html.ValidationMessageFor(model => model.Modu_Points, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => model.Modu_Description, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.TextAreaFor(model => model.Modu_Description, 7, 0, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Modu_Description, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => model.Modu_Statemodule, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.EnumDropDownListFor(model => model.Modu_Statemodule, new { @class = "form-control", @style = "width:70%" })
                            @Html.ValidationMessageFor(model => model.Modu_Statemodule, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Modu_Validity, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.EditorFor(model => model.Modu_Validity, new { htmlAttributes = new { @class = "form-control", @style = "width:70%" } })
                            @Html.ValidationMessageFor(model => model.Modu_Validity, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => model.Modu_InitDate, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.EditorFor(model => model.Modu_InitDate, new { @class = "col-sm-1", @style = "width:2%" })
                            @Html.ValidationMessageFor(model => model.Modu_InitDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Modu_Period, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.EnumDropDownListFor(model => model.Modu_Period, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Modu_Period, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Modu_TypeOfModule, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.EnumDropDownListFor(model => model.Modu_TypeOfModule, new { @class = "form-control", @style = "width:70%" })
                            @Html.ValidationMessageFor(model => model.Modu_TypeOfModule, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="col-md-6">
            @Html.LabelFor(model => model.Modu_Forum, htmlAttributes: new { @class = "control-label col-md-3" })
            @Html.EnumDropDownListFor(model => model.Modu_Forum, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Modu_Forum, "", new { @class = "text-danger" })
        </div>*@
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Modu_Improvement, htmlAttributes: new { @class = "control-label col-md-3" })
                            @Html.EnumDropDownListFor(model => model.Modu_Improvement, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Modu_Improvement, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Modu_BetterPractice, htmlAttributes: new { @class = "control-label col-md-4" })
                            @Html.EnumDropDownListFor(model => model.Modu_BetterPractice, new { @class = "form-control", @style = "width:70%" })
                            @Html.ValidationMessageFor(model => model.Modu_BetterPractice, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.QSMActive, htmlAttributes: new { @class = "control-label col-md-6" })
                            @Html.EnumDropDownListFor(model => model.QSMActive, new { @class = "form-control col-md-6", @style = "width:70%" })
                            @Html.ValidationMessageFor(model => model.QSMActive, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Modu_Test, htmlAttributes: new { @class = "control-label col-md-6" })
                            @Html.EnumDropDownListFor(model => model.Modu_Test, new { @class = "form-control col-md-6", @style = "width:70%" })
                            @Html.ValidationMessageFor(model => model.Modu_Test, "", new { @class = "text-danger" })
                            <br />
                        </div>
                        <div class="col-md-12">
                            @Html.Label("Portada", htmlAttributes: new { @class = "control-label col-md-4" })
                            <input type="file" id="CoverpageModule" name="upload" />
                        </div>
                        <br />
                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-8">
                                <br /><br />
                                <center><button class="btn btn-primary" name="singin" type="submit">Crear Curso</button></center>
                            </div>
                        </div>
                    </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>
    <div id="Inform" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title"></h4>
                </div>
                <div class="modal-body">
                    @TempData["Info"]
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>
        </div>
    </div>
    @using (Html.BeginForm("SeachModule", "AdminTraining", FormMethod.Post, new { @class = "navbar-form navbar-left", role = "search" }))
    {
        <div class="form-group">
            @Html.EditorFor(model => model.SearchModules, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre del Modulo" } })
        </div>
        <button type="submit" class="btn btn-default">Buscar</button>
        <div class="form-group">
            <div class="caja_botones" style="clear:both;">
                <button id="BTN_ADD" type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal">Añadir Curso</button>
                @*<button> @Html.ActionLink("Crear categoria", "CategoryModules", "AdminTraining")</button>*@
            </div>
        </div>
    }

    <br><hr style="width:100%; float:left; border:dashed; border-color: #A3DC68; border-width:thin;">
    <div class="table-responsive">
        <table class="table table-hover table-striped">
            <thead>
                <tr class="success">
                    <th><center>Nombre del Curso</center></th>
                    <th>Descripción</th>
                    <th>Tipo</th>
                    <th>Estado</th>
                    <th>Fecha de Incio</th>
                    <th>Vigencia</th>
                    <th>Portada</th>
                    <th>Modificar</th>
                    <th>Eliminar</th>
                    <th>Ver</th>

                </tr>
            </thead>
            <tbody>
                @foreach (Module modules in Model.ListModules)
                {
                    <tr>
                        <td>@modules.Modu_Name</td>
                        <td><div style='width:60px;height:20px; overflow:hidden;'>@modules.Modu_Description</div></td>
                        <td>@modules.Modu_TypeOfModule</td>
                        <td>@modules.Modu_Statemodule</td>
                        <td>@modules.Modu_InitDate</td>
                        <td>@modules.Modu_Validity @modules.Modu_Period</td>
                        <td>
                            <img src="~/Resources/@modules.Modu_ImageName" style="width:50px; height:50px" />
                        </td>
                        <td>
                            <input type="image" src="~/Content/Images/Editar_1.png" style="width:60px;height:15%;" class="img img-responsive" onclick="UpdateModule('@modules.Modu_Id')" data-cname="@modules.Modu_Id" />
                        </td>
                        <td>
                            <input type="image" src="~/Content/Images/eliminar_1.png" style="width:60px;height:15%;" class="img img-responsive" onclick="confirm_Delete('@modules.Modu_Id')" data-cname="@modules.Modu_Id" />
                        </td>
                        <td>
                            <a href='@Url.Action("Grades","AdminTraining", new { id = @modules.Modu_Id })'>
                                <img src='~/Content/Images/Ver_1.png' style="width:60px;height:15%;" class="img img-responsive" />
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <script type="text/Javascript" language="javascript">
        function UpdateModule(Modu_Id)
{
  if( confirm("Modificar Curso")==true)
  {
      var a = Modu_Id;
      window.location.href = ' @Url.Action("UpdateModule", "AdminTraining", new {id = "ID"})'.replace("ID",a);
   }
  else
  {
      var link = '@Url.Action("Modules", "AdminTraining")';
  }
}
    </script>
    @*Script eliminar Modulo*@
    <script type="text/Javascript" language="javascript">
        function confirm_Delete(Modu_Id)
{
  if( confirm("Elimiar Curso")==true)
  {
      var a = Modu_Id;
      window.location.href = ' @Url.Action("DeleteModule", "AdminTraining", new {id = "ID"})'.replace("ID",a);
   }
  else
  {
      var link = '@Url.Action("Modules", "AdminTraining")';
  }
}
    </script>
</div>

