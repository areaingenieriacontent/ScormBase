@using SCORM1.Models.ViewModel;
@using SCORM1.Enum;
@model ClienteViewModel
@{
    ViewBag.Title = "Sistema de clientes";
}

<!--Para regresar al home-->
<div class="row fecha">
    <div class="btn-group btn-breadcrumb">
        <a href="@Url.Action("Index", "Home")" class="btn btn-info"><i class="glyphicon glyphicon-home"></i></a>
        <a href="@Url.Action("ManagementUser", "UserAndMassiveManagement")" class="btn btn-info">Usuarios</a>
    </div>
</div>
<br />

<!-- To-Do Ajustar para buscar clientes-->
<div class="panel-primary">
    @*
        @using (Html.BeginForm("SearchClient", "ClientProfile", FormMethod.Post, new { @class = "row", role = "search" }))
        {
            <div class="col-md-2">
                @Html.EditorFor(model => model.cliente.lastName, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre" } })
            </div>
            <div class="col-md-1">
                <button type="submit" class="btn btn-default">Buscar</button>
            </div>
        }*@

    <div class="form-group">
        <div class="caja_botones" style="clear:both;">
            <!--<button id="BTN_ADD" type="button" class="btn btn-default" data-toggle="modal" data-target="#myModal">Añadir Cliente</button>-->
        </div>
    </div>

    @if (Model.listOfClients != null)
    {
        <br />
        <div class="table-responsive">
            <table class="table table-hover table-striped">
                <thead>
                    <tr class="success">
                        <th>Nombre y apellido</th>
                        <th>Identificacón</th>
                        <th>Razón Social</th>
                        <th>Días</th>
                        <th>Tipo Perfil</th>
                        <th>Editar</th>
                        <th>Eliminar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var client in Model.listOfClients)
                    {
                        <tr>
                            <td>@client.firstName @client.lastName</td>
                            <td>@client.identification</td>
                            <td>@client.enterpriseName</td>
                            <td>@client.Dia.name</td>
                            <td>@client.Clasificacion.name</td>
                            <td><a href='@Url.Action("EditClientAdmin", "ClientProfile", new { id = client.id})'>Editar</a></td>
                            <td><a href='@Url.Action("DeleteClient", "ClientProfile", new { id = client.id})'>Eliminar</a></td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <br /><br /><br /><br /><br />
        <div class="row">

            <center><h2>No hay clientes registrados</h2></center>

        </div>
    }

    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog1">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h2 class="modal-title"><strong>Nuevo Cliente</strong></h2>
                </div>
                <div class="modal-body">

                    @using (Html.BeginForm("CreateClient", "ClientProfile", FormMethod.Post, new { @class = "row", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <br />
                            <div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.cliente.firstName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.cliente.firstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombres" } })
                                </div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.lastName, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.EditorFor(model => model.cliente.lastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellidos", @style = "width:70%" } })
                                </div>
                            </div>

                            <div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.identification, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.cliente.identification, new { htmlAttributes = new { @class = "form-control", @placeholder = "Documento", @style = "width:70%" } })
                                </div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.enterpriseName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.cliente.enterpriseName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Razón Social", @style = "width:70%" } })
                                </div>
                            </div>

                            <div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.idDia, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(model => model.cliente.idDia, new SelectList(Model.listOfDays, "id", "name"), "Seleccione un día")
                                </div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.idClasificacion, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(model => model.cliente.idClasificacion, new SelectList(Model.listOfCalification, "id", "name"), "Clasificación")
                                </div>
                            </div>

                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-8">
                                    <br /><br />
                                    <center><button class="btn btn-primary" name="singin" type="submit">Crear Cliente</button></center>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>

    <div id="myEdit" class="modal fade" role="dialog">
        <div class="modal-dialog1">
            <div class="modal-content">
                <!--<div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h2 class="modal-title"><strong>Nuevo Cliente</strong></h2>
    </div>-->
                <div class="modal-body">

                    @using (Html.BeginForm("Edit", "ClientProfile", FormMethod.Post, new { @class = "row", role = "form", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="row">
                            <br />
                            <div>
                                <div class="col-md-6">
                                    @Html.LabelFor(model => model.cliente.firstName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.cliente.firstName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Nombres" } })
                                </div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.lastName, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.EditorFor(model => model.cliente.lastName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Apellidos", @style = "width:70%" } })
                                </div>
                            </div>

                            <div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.identification, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.cliente.identification, new { htmlAttributes = new { @class = "form-control", @placeholder = "Documento", @style = "width:70%" } })
                                </div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.enterpriseName, htmlAttributes: new { @class = "control-label col-md-3" })
                                    @Html.EditorFor(model => model.cliente.enterpriseName, new { htmlAttributes = new { @class = "form-control", @placeholder = "Razón Social", @style = "width:70%" } })
                                </div>
                            </div>

                            <div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.idDia, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(model => model.cliente.idDia, new SelectList(Model.listOfDays, "id", "name"), "Seleccione un día")
                                </div>
                                <div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.cliente.idClasificacion, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.DropDownListFor(model => model.cliente.idClasificacion, new SelectList(Model.listOfCalification, "id", "name"), "Clasificación")
                                </div>
                            </div>

                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-8">
                                    <br /><br />
                                    <center><button class="btn btn-primary" name="singin" type="submit">Crear Cliente</button></center>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                </div>
            </div>

        </div>
    </div>
</div>