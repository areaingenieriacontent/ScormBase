@using SCORM1.Models.ViewModel
@using SCORM1.Models.Engagement
@using SCORM1.Enum;
@model AdminGeneralPrizeViewModel
@Html.Partial("_LoginSuperAdmin")
<br />
<br />
<br />
<br />
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<br />
<br />
<br />
<br />
<div class="row fecha">
    <div class="btn-group btn-breadcrumb">
        <a href="@Url.Action("Index", "Home")" class="btn btn-info"><i class="glyphicon glyphicon-home"></i></a>
    </div>
</div>
<br />
<h1 class="title">ADMINISTRADOR DE PREMIOS</h1>

@if (TempData["Edit"] != null)
{
    <div class="alert alert-danger fade in">
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        @TempData["Edit"]
    </div>
}
@if (TempData["Add"] != null)
{
    <div class="alert alert-danger fade in">
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        @TempData["Add"]
    </div>
}

@if (TempData["Delete"] != null)
{
    <div class="alert alert-danger fade in">
        <a href="#" class="close" data-dismiss="alert">&times;</a>
        @TempData["Delete"]
    </div>
}

@if (TempData["AddMessageError"] != null)
{
    @section Scripts {
        <script type="text/JavaScript">
            $(document).ready(function () {
                $("#AddCategoryModule").modal();
            });
        </script>
    }}

@Scripts.Render("~/bundles/jqueryval")
<div class="panel-primary">

    @if (TempData["UpdatePrize"] != null)
    {
        @section Scripts {
            <script type="text/JavaScript">
                $(document).ready(function () {
                    $("#FormUpdatePrize").modal();
                });
            </script>
        }}




    @using (Html.BeginForm("UpdatePrize", "AdminGeneral", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {

        @Html.AntiForgeryToken()
        <div class="modal fade" id="FormUpdatePrize" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog1" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h2 class="modal-title"><strong>MODIFICAR PREMIO</strong></h2>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="col-md-6">
                                @Html.HiddenFor(model => model.Priz_Id)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.EditorFor(model => model.Priz_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_RequiredPoints, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.Priz_RequiredPoints, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_RequiredPoints, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_Description, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.EditorFor(model => model.Priz_Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_Quantity, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.Priz_Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_Quantity, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Priz_Capr_Id, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.DropDownListFor(model => model.Priz_Capr_Id, Model.CategoryPrize, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Priz_Capr_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Priz_Stateprize, new { @class = "control-label col-md-4" })
                                @Html.EnumDropDownListFor(model => model.Priz_Stateprize, new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Prize_Icon, new { @class = "control-label col-md-3" })
                                @Html.EnumDropDownListFor(model => model.Prize_Icon, new { @class = "form-control" })
                            </div>
                            @*<div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.Priz_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.EditorFor(model => model.Priz_Date, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Priz_Date, "", new { @class = "text-danger" })
                                </div>*@
                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-8">
                                    <center><button class="btn btn-primary" name="singin" type="submit">Modificar Premio</button></center>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    }


    @using (Html.BeginForm("AddPrize", "AdminGeneral", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="modal fade" id="AddCategoryModule" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
            <div class="modal-dialog1" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h2 class="modal-title"><strong>NUEVO PREMIO</strong></h2>
                    </div>
                    <div class="modal-body">
                        <p class="warning" style="color:red">@TempData["AddMessageError"] </p>
                        <div class="row">
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_Name, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.EditorFor(model => model.Priz_Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_Name, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_RequiredPoints, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.Priz_RequiredPoints, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_RequiredPoints, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_Description, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.EditorFor(model => model.Priz_Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_Description, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.LabelFor(model => model.Priz_Quantity, htmlAttributes: new { @class = "control-label col-md-4" })
                                @Html.EditorFor(model => model.Priz_Quantity, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Priz_Quantity, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Priz_Capr_Id, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.DropDownListFor(model => model.Priz_Capr_Id, Model.CategoryPrize, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Priz_Capr_Id, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Priz_Stateprize, new { @class = "control-label col-md-4" })
                                @Html.EnumDropDownListFor(model => model.Priz_Stateprize, new { @class = "form-control" })
                            </div>
                            <div class="col-md-6">
                                @Html.LabelFor(model => model.Prize_Icon, new { @class = "control-label col-md-3" })
                                @Html.EnumDropDownListFor(model => model.Prize_Icon, new { @class = "form-control" })
                            </div>
                            @*<div class="col-md-6">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.LabelFor(model => model.Priz_Date, htmlAttributes: new { @class = "control-label col-md-4" })
                                    @Html.EditorFor(model => model.Priz_Date, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.Priz_Date, "", new { @class = "text-danger" })
                                </div>*@
                            <br />
                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-8">
                                    <center><button class="btn btn-primary" name="singin" type="submit">Crear Premio</button></center>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                    </div>
                </div>
            </div>
        </div>
    }
    @using (Html.BeginForm("SearchPrize", "AdminGeneral", FormMethod.Post, new { @class = "navbar-form navbar-left", role = "search" }))
    {
        <div class="form-group">
            @Html.EditorFor(model => model.searchPrize, new { htmlAttributes = new { @class = "form-control", placeholder = "Nombre del premio" } })
        </div>
        <div class="form-group">
            <div class="caja_botones" style="clear:both;">
                <button type="submit" class="btn btn-primary btn-responsive">Buscar</button>
                <button id="BTN_ADD" type="button" class="btn btn-primary btn-responsive" data-toggle="modal" data-target="#AddCategoryModule">Añadir Premio</button>
                <input type="button" class="btn btn-primary btn-responsive" value="Añadir Categoria" onclick="@("location.href='" + Url.Action("CategoryPrize", "AdminGeneral") + "'")" />
                <input type="button" class="btn btn-primary btn-responsive" value="Administrar Peticiones" onclick="@("location.href='" + Url.Action("ManagerPrize", "AdminGeneral") + "'")" />

            </div>
        </div>

    }
    <br>

    @if (Model.ListPrize.Count == 0)
    {
        <br />
        <br />
        <br />
        <br />
        <br />
        <div class="row">

            <center> <img src="@Url.Content("~/Content/Images//Lista-premios-vacia-w.png")" style="width:600px;" alt="Imagen responsive" class="img-responsive" /></center>

        </div>

    }


    else

    {

        <hr style="width:100%; float:left; border:dashed; border-color: #A3DC68; border-width:thin;">


        <div class="table-responsive col-md-12 col-sm-12">
            <table class="table table-hover table-striped">
                <thead>

                    <tr class="success">
                        <th>  Nombre Premio</th>
                        <th> Descripcion Premio </th>
                        <th> Puntos Requeridos  </th>
                        <th> Cantidad</th>
                        <th>Estado</th>
                        <th> Icono  </th>
                        <th>Categoria </th>
                        <th> Fecha  </th>
                        <th> Modificar </th>
                        <th> Eliminar </th>
                    </tr>
                </thead>
                <tbody>






                    @foreach (Prize Prize in Model.ListPrize)
                    {

                        <tr>

                            <td>@Prize.Priz_Name</td>
                            <td><div style='width:60px;height:20px; overflow:hidden;'>@Prize.Priz_Description</div></td>
                            <td>@Prize.Priz_RequiredPoints</td>
                            <td>@Prize.Priz_Quantity</td>
                            <td>@Prize.Priz_Stateprize</td>
                            <td>@Prize.Prize_Icon</td>
                            <td>@Prize.CategoryPrize.Capr_category</td>
                            <td>@Prize.Priz_Date</td>

                            <td>

                                @if (Prize.Priz_Quantity == 0)
                                {
                                    <h>Producto agotado  </h>
                                }

                                <input type="image" src="~/Content/Images/Editar_1.png" style="width:60px;height:15%;" class="img img-responsive" onclick="UpdatePrize('@Prize.Priz_Id')" data-cname="@Prize.Priz_Id" />
                            </td>
                            <td>
                                <input type="image" src="~/Content/Images/eliminar_1.png" style="width:60px;height:15%;" class="img img-responsive" onclick="DeletePrize('@Prize.Priz_Id')" data-cname="@Prize.Priz_Id" />
                            </td>

                        </tr>
                    }

                    @if (Model.Priz_Capr_Id != null)
                    {

                    }
                    else
                    {
                        <h>Pendiente Aprobación</h>
                    }


                </tbody>
            </table>
        </div>
    }
    @*Modificar Categoria*@
    <script type="text/Javascript" language="javascript">
                function UpdatePrize(Capr_Id) {
                    if (confirm(" Modificar Premio") == true) {
                        var c = Capr_Id;
                        window.location.href = ' @Url.Action("UpdatePrize", "AdminGeneral", new {id = "ID"})'.replace("ID", c);
                    }
                    else {
                        var link = '@Url.Action("CategoryPrize", "AdminGeneral")';
                    }
                }
    </script>
    @*Script eliminar Categoria*@
    <script type="text/Javascript" language="javascript">
                function DeletePrize(Capr_Id) {
                    if (confirm("Elimiar Premiox") == true) {
                        var c = Capr_Id;
                        window.location.href = ' @Url.Action("DeletePrize", "AdminGeneral", new {id = "ID"})'.replace("ID", c);
                    }
                    else {
                        var link = '@Url.Action("CategoryPrize", "AdminGeneral")';
                    }
                }
    </script>
</div>
